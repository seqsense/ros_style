on:
  workflow_call:
    inputs:
      style-branch:
        type: string
        default: master
      continue-on-error:
        type: boolean
        default: false
      run-typecheck:
        type: boolean
        default: true
      files:
        type: string
      flake8_extend_ignore: # list of comma separated flake8 error codes
        type: string
    outputs:
      passed-lint:
        value: ${{ jobs.lint.outputs.passed }}
      passed-typecheck:
        value: ${{ jobs.typecheck.outputs.passed }}

jobs:
  lint:
    runs-on: ubuntu-latest
    outputs:
      passed: ${{ steps.check.outputs.passed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Remove ignored paths
        run: find . -name .lint-ignore | xargs dirname | xargs rm -rf
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: x64
      - name: Install flake8 and plugins
        run: pip install --disable-pip-version-check flake8-black==0.3.3 flake8-isort==4.1.1
      - name: Install flake8-annotations
        if: inputs.run-typecheck
        run: pip install --disable-pip-version-check flake8-annotations==2.6.2
      - name: Run flake8
        id: check
        continue-on-error: ${{ inputs.continue-on-error }}
        run: |
          curl -LOJs https://raw.githubusercontent.com/seqsense/ros_style/${{ inputs.style-branch }}/.flake8
          curl -LOJs https://raw.githubusercontent.com/seqsense/ros_style/${{ inputs.style-branch }}/pyproject.toml

          extend_ignore="${{ inputs.flake8_extend_ignore }}"
          if [ -n "${extend_ignore}" ]; then
            sed -i "/^ignore/ s/$/, ${extend_ignore}/" .flake8
          fi

          cmd="flake8 --count --show-source --statistics"

          files_to_check="${{ inputs.files }}"
          if [ -z "${files_to_check}" ]; then
            files_to_check=$(find . -type f -not -path '*/\.git/*' -not -path '*/__pycache__/*' -not -path '*/\.mypy_cache/*')
          fi

          exit_code=0

          for file in ${files_to_check}; do
            filetype=$(file -b --mime-type ${file})
            if echo ${filetype} | grep -qE "text/x-python|text/x-script.python"; then
              echo "checking ${file}"
              ${cmd} ${file} \
                | sed 's|^\(\S\+\):\([0-9]\+\):\([0-9]\+\): \(.*\)$|::error file=\1,line=\2,col=\3::\4\n\0|'
              exit_code=$(($exit_code | ${PIPESTATUS[0]}))
            fi
          done

          if [ ${exit_code} -eq 0 ]; then
            echo "passed=true" >> ${GITHUB_OUTPUT}
          else
            echo "passed=false" >> ${GITHUB_OUTPUT}
          fi

          exit $exit_code
  typecheck:
    runs-on: ubuntu-latest
    if: inputs.run-typecheck
    outputs:
      passed: ${{ inputs.run-typecheck == 'false' || steps.check.outputs.passed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Remove ignored paths
        run: find . -name .lint-ignore | xargs dirname | xargs rm -rf
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: x64
      - name: Install mypy
        run: pip install --disable-pip-version-check mypy==0.950
      - name: Run mypy
        id: check
        continue-on-error: ${{ inputs.continue-on-error }}
        run: |
          curl -LOJs https://raw.githubusercontent.com/seqsense/ros_style/${{ inputs.style-branch }}/mypy.ini

          cmd="mypy --config-file mypy.ini --scripts-are-modules"

          files_to_check="${{ inputs.files }}"
          if [ -z "${files_to_check}" ]; then
            files_to_check=$(find . -type f -not -path '*/\.git/*' -not -path '*/__pycache__/*' -not -path '*/\.mypy_cache/*')
          fi

          python_files=()

          for file in ${files_to_check}; do
            filetype=$(file -b --mime-type ${file})
            if echo ${filetype} | grep -qE "text/x-python|text/x-script.python"; then
              python_files+=(${file})
            fi
          done
          echo "found ${#python_files[@]} python file(s)"

          if [ ${#python_files[@]} -eq 0 ]; then
            echo "passed=true" >> ${GITHUB_OUTPUT}
            exit 0
          fi

          echo "checking ${python_files[@]}"

          # install explicitly listed type stub packages
          if [ -f ".mypy-stub-pkgs" ]; then
            pip install -r .mypy-stub-pkgs
          fi

          # workaround to get mypy to figure out the types it should install
          # note that it does not upgrade already installed packages
          mypy --config-file mypy.ini . > /dev/null 2> /dev/null || true
          mypy --install-types --non-interactive

          output="$(${cmd} ${python_files[@]} | tee /dev/stderr)"
          result="$(echo "${output}" | tail -n 1)"

          echo "${output}" | sed -n 's|^\(\S\+\):\([0-9]\+\):\([0-9]\+\): error: \(.*\)$|::error file=\1,line=\2,col=\3::\4|p'

          if [[ -n "$result" ]]; then
            error="$(echo $result | awk '/^Found/{print $2}')"
            if [[ -z "$error" ]]; then
              echo "passed=true" >> ${GITHUB_OUTPUT}
              exit 0
            fi
          fi
          echo "passed=false" >> ${GITHUB_OUTPUT}
          exit 1
